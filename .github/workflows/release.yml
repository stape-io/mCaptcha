name: Publish release

on:
  release:
    type: [published]

jobs:
  build_and_test:
    strategy:
      fail-fast: false

    name: x86_64-unknown-linux-gnu
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      mcaptcha-redis:
        image: mcaptcha/cache
        ports:
          - 6379:6379
      mcaptcha-smtp:
        image: maildev/maildev
        env:
          MAILDEV_WEB_PORT: "1080"
          MAILDEV_INCOMING_USER: "admin"
          MAILDEV_INCOMING_PASS: "password"
        ports:
          - 1080:1080
          - 10025:1025

      maria:
        image: mariadb:10
        env:
          MARIADB_USER: "maria"
          MARIADB_PASSWORD: "password"
          MARIADB_ROOT_PASSWORD: "password"
          MARIADB_DATABASE: "maria"
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10
        ports:
          - 3306:3306

    steps:
      - uses: actions/checkout@v4

      - name: configure GPG key
        run: echo -n "$RELEASE_BOT_GPG_SIGNING_KEY" | gpg --batch --import --pinentry-mode loopback
        env:
          RELEASE_BOT_GPG_SIGNING_KEY: ${{ secrets.RELEASE_BOT_GPG_SIGNING_KEY }}

      - name: Set release version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: load env
        run: |
          source .env_sample \
            && echo "POSTGRES_DATABASE_URL=$POSTGRES_DATABASE_URL" >> $GITHUB_ENV \
            && echo "MARIA_DATABASE_URL=$MARIA_DATABASE_URL" >> $GITHUB_ENV

      - uses: actions/setup-node@v2
        with:
          node-version: "20.0.0"

      - uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: install nightwatch dep
        run: sudo apt-get install xvfb

      - name: Run migrations
        run: make migrate
        env:
          POSTGRES_DATABASE_URL: "${{ env.POSTGRES_DATABASE_URL }}"
          MARIA_DATABASE_URL: "${{ env.MARIA_DATABASE_URL }}"

      - name: build
        run: make
        env:
          POSTGRES_DATABASE_URL: "${{ env.POSTGRES_DATABASE_URL }}"
          MARIA_DATABASE_URL: "${{ env.MARIA_DATABASE_URL }}"

      - name: lint frontend
        run: yarn lint

      - name: run tests
        run: make test
        env:
          POSTGRES_DATABASE_URL: "${{ env.POSTGRES_DATABASE_URL }}"
          MARIA_DATABASE_URL: "${{ env.MARIA_DATABASE_URL }}"

      - name: run integration tests
        run: make test.integration

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: mcaptcha
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: build docker images
        run: docker build -t mcaptcha/mcaptcha:${RELEASE_VERSION} .

      - name: publish docker images
        run: docker push mcaptcha/mcaptcha:${RELEASE_VERSION}

      - name: publish bins
        run: ./scripts/publish.sh publish $RELEASE_VERSION latest $DUMBSERVE_PASSWORD
        env:
          DUMBSERVE_PASSWORD: ${{ secrets.DUMBSERVE_PASSWORD }}
          GPG_PASSWORD: ${{ secrets.GPG_PASSWORD }}
